{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Adota Pet API",
    "description": "Documentação da API do AdotaPet"
  },
  "host": "http://localhost:8080/api",
  "basePath": "/",
  "tags": [],
  "schemes": [
    "http"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/api/user/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Realizar o cadastro do usuário.",
        "description": "Rota para Usuário.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Usuário cadastrado com Sucesso!"
          },
          "400": {
            "description": "Ocorreu um erro ao cadastrar o usuário!"
          }
        }
      }
    },
    "/api/user": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Realiza o upadate dos dados de um usuário.",
        "description": "Rota para Usuário.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso!"
          },
          "400": {
            "description": "Ocorreu um erro ao atualizar o Usuário!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/{ID}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Deleta o usuário cujo id foi informado.",
        "description": "Rota para Usuário.",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "Integer",
            "description": "Id do usuário",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário excluído com sucesso!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Ocorreu um erro ao tentar deletar o usuário!"
          }
        }
      }
    },
    "/api/animal": {
      "get": {
        "tags": [
          "Animal"
        ],
        "summary": "Exibi todos os animais cadastrados",
        "description": "Retorna todos os animais",
        "parameters": [
          {
            "name": "UF",
            "type": "String",
            "in": "query"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "UF": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Ocorreu um erro ao buscar os animais!"
          }
        }
      },
      "post": {
        "tags": [
          "Animal"
        ],
        "summary": "Cadastra os animais.",
        "description": "Rota que cadastra os animais.\r \n \n \n#swagger.summary = ",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Post Successfully "
          },
          "400": {
            "description": "Ocorreu um erro ao cadastrar os animais!!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Animal"
        ],
        "summary": "Atualiza os dados dos animais.",
        "description": "Rota que atualiza os dados dos animais.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Animal atualizado com sucesso!"
          },
          "400": {
            "description": "Ocorreu um erro ao atualizar o animal!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/animal/{ID}": {
      "get": {
        "tags": [
          "Animal"
        ],
        "summary": "Exibi o animal cujo id foi informado.",
        "description": "Retorna o animal cujo id foi informado.",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "Integer",
            "description": "Id do animal",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Successfully "
          },
          "500": {
            "description": "Favor passar um ID válido!!"
          }
        }
      },
      "delete": {
        "tags": [
          "Animal"
        ],
        "summary": "Deleta o animal cujo o ID foi informado.",
        "description": "Rota que deleta o animal cujo o ID foi informado.",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Animal excluído com sucesso!"
          },
          "400": {
            "description": "Favor passar um ID válido!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Ocorreu um erro ao deletar o animal!"
          }
        }
      }
    },
    "/api/animal/upload": {
      "post": {
        "tags": [
          "Animal"
        ],
        "summary": "Envio de imagens dos animais.",
        "description": "Rota que possibilita o upload de imagens dos animais.",
        "parameters": [
          {
            "name": "file",
            "type": "String",
            "description": "Arquivo que o usuário deseja enviar.",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Arquivo enviado com sucesso!"
          },
          "400": {
            "description": "Houve erro no upload!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ong": {
      "post": {
        "tags": [
          "Ong"
        ],
        "summary": "Realiza o cadastro de uma Ong.",
        "description": "Rota que realiza o cadastro de uma Ong.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Ong Cadastrada com Sucesso!"
          },
          "400": {
            "description": "Erro ao cadastrar a Ong!"
          }
        }
      },
      "put": {
        "tags": [
          "Ong"
        ],
        "summary": "Atualiza os dados de uma Ong.",
        "description": "Rota que atualiza os dados de uma Ong.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Ong atualizada com Sucesso!"
          },
          "400": {
            "description": "Erro ao atualizar a Ong!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Ong"
        ],
        "summary": "Exibi todas as Ongs cadastradas.",
        "description": "Rota que mostra todas as Ongs cadastradas.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get Successfully"
          },
          "500": {
            "description": "Ocorreu um erro ao tentar buscar as ongs!"
          }
        }
      }
    },
    "/api/ong/{ID}": {
      "get": {
        "tags": [
          "Ong"
        ],
        "summary": "Exibi a Ong cujo Id foi informado.",
        "description": "Rota que retorna uma Ong pelo Id informado.",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "Integer",
            "description": "Id da Ong",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Successfully"
          },
          "500": {
            "description": "Ocorreu um erro ao tentar buscar a ong pelo ID!"
          }
        }
      },
      "delete": {
        "tags": [
          "Ong"
        ],
        "summary": "Deleta a Ong cujo o ID foi informado.",
        "description": "Rota que deleta a Ong cujo o ID foi informado.",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "Integer",
            "description": "Id da Ong",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ONG excluída com sucesso!"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Ocorreu um erro ao tentar deletar a ONG!"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Autenticação"
        ],
        "summary": "Autenticação do usuário.",
        "description": "Rota para autenticação do usuário.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Usuário autenticado com sucesso!"
          }
        }
      }
    },
    "/api/auth/forgotPassword": {
      "post": {
        "tags": [
          "Autenticação"
        ],
        "summary": "Recuperação da senha do usuário.",
        "description": "Rota para recuperar a senha do usuário.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "Email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Ocorreu um erro ao solicitar a alteração de senha!"
          }
        }
      }
    },
    "/api/auth/UpdatePassword": {
      "post": {
        "tags": [
          "Autenticação"
        ],
        "summary": "Atualiza a senha do usuário.",
        "description": "Rota para atualizar a senha do usuário.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "senha": {
                  "example": "any"
                },
                "token": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Senha Alterada com sucesso!"
          },
          "500": {
            "description": "Erro ao solicitar a alteração de senha! Token inválido!"
          }
        }
      }
    }
  },
  "definitions": {},
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}